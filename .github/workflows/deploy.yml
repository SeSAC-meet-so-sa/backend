name: Docker and ECR CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-push:
    name: 도커 이미지화
    runs-on: ubuntu-latest

    steps:
      - name: 리포지토리 코드 체크아웃
        uses: actions/checkout@v3

      - name: Docker Buildx 설정
        uses: docker/setup-buildx-action@v2

      - name: AWS Credentials 설정
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: ECR 로그인
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} \
          | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      # - name: Docker Hub 로그인
      #   uses: docker/login-action@v2
      #   with:
      #     username: ${{ secrets.DOCKER_HUB_USERNAME }}
      #     password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Docker 이미지 빌드 및 푸시
        uses: docker/build-push-action@v4
        with:
          context: ./
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          # tags: ${{ secrets.DOCKER_HUB_USERNAME }}/nestjs-app:${{ github.sha }}
          tags: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.AWS_ECR_REPO_NAME }}:latest

  deploy:
    name: 서버 배포
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: 서버 배포 및 상태 확인
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /home/ubuntu
            # docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/nestjs-app:latest
            docker pull ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.AWS_ECR_REPO_NAME }}:latest
            sudo docker-compose down -v
            sudo docker-compose up -d
            docker image prune —f
            echo "=== Docker 컨테이너 상태 ==="
            sudo docker-compose ps
